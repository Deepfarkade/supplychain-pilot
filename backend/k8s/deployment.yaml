# Kubernetes deployment for production scaling
apiVersion: apps/v1
kind: Deployment
metadata:
  name: supply-chain-ai-backend
  labels:
    app: supply-chain-ai-backend
spec:
  replicas: 3  # Horizontal scaling
  selector:
    matchLabels:
      app: supply-chain-ai-backend
  template:
    metadata:
      labels:
        app: supply-chain-ai-backend
    spec:
      containers:
      - name: backend
        image: ghcr.io/your-org/supply-chain-ai-backend:latest
        ports:
        - containerPort: 8080
        env:
        - name: MONGODB_URL
          valueFrom:
            secretKeyRef:
              name: backend-secrets
              key: mongodb-url
        - name: DATABASE_NAME
          value: "n8n_Test"
        - name: COLLECTION_NAME
          value: "n8n_Users"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: backend-secrets
              key: jwt-secret
        - name: REDIS_HOST
          value: "redis-service"
        - name: ENVIRONMENT
          value: "production"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  selector:
    app: supply-chain-ai-backend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: backend-ingress
  annotations:
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  rules:
  - host: api.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: backend-service
            port:
              number: 80
---
apiVersion: v1
kind: Secret
metadata:
  name: backend-secrets
type: Opaque
data:
  mongodb-url: # base64 encoded MongoDB URL
  jwt-secret: # base64 encoded JWT secret